---
interface ProjectProps {
  img: string;
  title: string;
  description: string;
  tags: string[];
  repo: string;
  web?: string;
}

const {
  img,
  title = "Titulo",
  description = "Descripcion del proyecto",
  tags = ["tag1", "tag2", "tag3"],
  repo = "",
  web = "",
} = Astro.props as ProjectProps;
---

<article class="project">
  <div class="img__container">
    <img class="project__img" src={img} alt="Imagen del proyecto" />
  </div>
  <div class="project__texts">
    <h3>{title}</h3>
    <p>{description}</p>
    <p>
      <b>
        {tags.join(", ")}
      </b>
    </p>
    <div class="project__buttons">
      {
        web && (
          <a href={web} target="_blank" rel="noopener noreferrer">
            <button>
              <svg
                xmlns="http://www.w3.org/2000/svg"
                width="24"
                height="24"
                viewBox="0 0 24 24"
                fill="none"
                stroke="currentColor"
                stroke-width="2"
                stroke-linecap="round"
                stroke-linejoin="round"
                class="icon icon-tabler icons-tabler-outline icon-tabler-external-link"
              >
                <>
                  <path stroke="none" d="M0 0h24v24H0z" fill="none" />
                  <path d="M12 6h-6a2 2 0 0 0 -2 2v10a2 2 0 0 0 2 2h10a2 2 0 0 0 2 -2v-6" />
                  <path d="M11 13l9 -9" />
                  <path d="M15 4h5v5" />
                </>
              </svg>
            </button>
          </a>
        )
      }
      <a href={repo} target="_blank" rel="noopener noreferrer">
        <button>
          <svg
            xmlns="http://www.w3.org/2000/svg"
            width="24"
            height="24"
            viewBox="0 0 24 24"
            fill="none"
            stroke="currentColor"
            stroke-width="2"
            stroke-linecap="round"
            stroke-linejoin="round"
            class="icon icon-tabler icons-tabler-outline icon-tabler-brand-github"
            ><path stroke="none" d="M0 0h24v24H0z" fill="none"></path><path
              d="M9 19c-4.3 1.4 -4.3 -2.5 -6 -3m12 5v-3.5c0 -1 .1 -1.4 -.5 -2c2.8 -.3 5.5 -1.4 5.5 -6a4.6 4.6 0 0 0 -1.3 -3.2a4.2 4.2 0 0 0 -.1 -3.2s-1.1 -.3 -3.5 1.3a12.3 12.3 0 0 0 -6.2 0c-2.4 -1.6 -3.5 -1.3 -3.5 -1.3a4.2 4.2 0 0 0 -.1 3.2a4.6 4.6 0 0 0 -1.3 3.2c0 4.6 2.7 5.7 5.5 6c-.6 .6 -.6 1.2 -.5 2v3.5"
            ></path></svg
          >
        </button>
      </a>
    </div>
  </div>
</article>

<style>
  .projects__container {
    display: flex;
    max-width: 720px;
    margin: auto;
    flex-direction: column;
    gap: 32px;
    padding-bottom: 24px;
  }
  .project {
    padding: 16px;
    text-align: left;
    border-radius: 16px;
    background-color: var(--beige);
    border: 1px solid rgba(0, 0, 0, 0.1);
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
    transition: all 0.3s ease;
  }
  .project:hover {
    background-color: var(--beige-dark);
    box-shadow: 0 8px 16px rgba(0, 0, 0, 0.2);
    transition: all 0.3s ease;
    border: 1px solid rgba(0, 0, 0, 0.3);
  }
  .project-dark:hover {
    background-color: var(--bg-hover-darktheme);
  }
  .project__img {
    width: 334px;
    height: 216px;
    object-fit: cover;
    border-radius: 16px;
    border: 1px solid rgba(0, 0, 0, 0.1);
  }
  .img__container {
    display: flex;
    justify-content: center;
    align-items: center;
  }
  .project__buttons button {
    padding: 4px 24px;
  }

  .project-dark {
    background-color: var(--bg-darktheme);
    color: var(--text-darktheme);
  }

  @media (min-width: 720px) {
    .projects h2 {
      margin-bottom: 48px;
    }

    .project {
      display: flex;
      gap: 16px;
    }
    .project img {
      flex: 1;
    }
    .project__texts {
      flex: 1;
    }
  }
</style>
